#!/bin/bash

## ENV ##

set -e # exits if any line returns an error

set -x # reports actions explicitly as they run

## UTILS ##

# Bold Colors for formatting
g="\033[1;32m" # Green
r="\033[1;31m" # Red
y="\033[1;33m" # Yellow
w="\033[1;37m" # White
rs="\033[0m"   # Reset

## example:: ${w}$HOME/.xinitrc${rs}"


success()
{
    printf "[${g}OK${rs}] $1 ${w}$2${rs}\n"
}

warning()
{
    printf "[${y}XX${rs}] ${y}warning:${rs} $1 ${w}$2${rs}\n"
}

failure()
{
    printf "[${r}XX${rs}] ${r}failed:${rs} $1 ${w}$2${rs}\n"
}

die()
{
    "$@"
    printf "${r}\nExiting${rs}\n"
    exit 1
}


## QUESTIONS ##

ask_for_confirmation() {
    print_question "$1 (y/n) "
    read -nr 1
    printf "\n"
}

answer_is_yes() {
    [[ "$REPLY" =~ ^[Yy]$ ]] \
    && return 0 \
    || return 1
}

## PRINTING ##

print_result() {
    if [[ "$1" -eq 0 ]]; then
        print_success "$2"
    else
        print_error "$2"
    fi

    [[ "$3" == "true" ]] && [[ "$1" -ne 0 ]] \
        && exit
}

# Print output in green
print_success() {
    printf "\e[0;32m  [✔] %s\e[0m\n" "$1"
}

# Print output in red
print_error() {
    printf "\e[0;31m  [✖] %s %s\e[0m\n" "$1" "$2"
}

# Print output in yellow
print_question() {
    printf "\e[0;33m  [?] %s\e[0m" "$1"
}


# Example

# ask_for_confirmation "'$targetFile' already exists, do you want to overwrite it?"
#            if answer_is_yes; then
# rm -rf "$targetFile"
